"""Init auth part of DB

Revision ID: 204891ad4e5f
Revises: 
Create Date: 2024-03-04 08:58:58.321310

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from src.auth.model import Role, User, UserRole

# revision identifiers, used by Alembic.
revision: str = '204891ad4e5f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )

    op.execute(sa.insert(Role).values(name='admin'))
    op.execute(sa.insert(Role).values(name='user'))

    op.create_table('user',
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=32), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )

    op.execute(
        sa.insert(User).values(
            username='admin',
            password='$2b$12$msAZ4G5YyUTGIDBUpdze/uiNxgMx6XdNjoyfGQhdv2yc0kgOj0caC',
        )
    )

    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id', 'id'),
    sa.UniqueConstraint('id')
    )

    op.execute(sa.insert(UserRole).values(user_id=1, role_id=1))
    op.execute(sa.insert(UserRole).values(user_id=1, role_id=2))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_role')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
