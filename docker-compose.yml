services:
  service_db_postgres:
    container_name: db_postgres
    image: postgres
    restart: always
    ports:
      - "${DB_PORT}:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${PG_DATABASE_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      NO_PROXY: localhost,service_db_qdrant,service_db_postgres,api
      no_proxy: localhost,service_db_qdrant,service_db_postgres,api
    volumes:
      - ./db_apps/postgres:/var/lib/postgresql/data:z

  api:
    container_name: api_sem
    restart: always 
    command: api
    build: .
    ports:
      - "${SERVICE_PORT}:8000"
    environment:
      PYTHONUNBUFFERED: 1
      DB_HOST: service_db_postgres
      DB_NAME: ${PG_DATABASE_NAME}
      DB_USER: ${DB_USER}
      DB_QDRANT: service_db_qdrant
      DB_REDIS: service_db_redis
      NO_PROXY: localhost,service_db_qdrant,service_db_postgres,api
      no_proxy: localhost,service_db_qdrant,service_db_postgres,api
    volumes:
      - ./LaBSE:${EMBEDDING_MODEL}
    env_file:
      - .env
    depends_on:
      - service_db_postgres
      - service_db_qdrant
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              #device_ids: ['0', '3']
              capabilities: [gpu]

  service_db_qdrant:
    container_name: db_qdrant
    image: qdrant/qdrant
    restart: always
    volumes:
      - ./db_apps/qdrant:/qdrant/storage:z
    ports:
      - "${QDRANT_PORT}:6333"
      - "6334:6334"
    environment:
      NO_PROXY: localhost,service_db_qdrant,service_db_postgres,api
      no_proxy: localhost,service_db_qdrant,service_db_postgres,api
    
  service_db_redis:
    container_name: db_redis
    image: redis
    restart: always
    environment:
      NO_PROXY: localhost,service_db_qdrant,service_db_postgres,api
      no_proxy: localhost,service_db_qdrant,service_db_postgres,api
    ports:
      - "${REDIS_PORT}:6379"